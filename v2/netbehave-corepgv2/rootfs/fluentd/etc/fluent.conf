# netbehave-core fluentd config

# Input From netbehave-nfipfix-collector (normalized information)
<source>
  @type  forward
  @id    input1
  @label @nfcore
#  tag nf
  port  24224
</source>


<source>
	@type tail
	path /opt/netbehave/core/tails/*
	pos_file /opt/netbehave/core/tails.pos
	read_from_head true
  	tag  nf
#  @label @nfcore
  @label @notnorm

	<parse>
		@type json
	</parse>
</source>


<label @notnorm>
	<filter **>
		@type FlowNormalizer
		keep_only_flowinfo true
		local_networks "#{ENV['LOCAL_NETWORKS']}"
#		mapNatSrcNetwork home
#		mapNatDstNetwork NAT
	</filter>

    <match **>
    @type copy
        <store>
	      @type relabel
		  @label @nfcore
        </store>
    </match>

</label>

# Filter and Output
<label @nfcore>

	# Generic augment section for all types of flows (service, netblock, hosts, dns)
	
	# Augment with service information (CSV source file adapted from /etc/services)
	<filter **>
		@type FlowAugmentService
		    dbhost "#{ENV['POSTGRES_HOST']}"
			dbname "#{ENV['POSTGRES_DB']}"
			dbpass "#{ENV['POSTGRES_PASSWORD']}"
			dbuser "#{ENV['POSTGRES_USER']}"
#			dbuser 
	</filter>

	# Augment with DNS information using reverse DNS
#	<filter **>
#		@type FlowReverseDNS
#		dnsCacheServer netbehave-dnscache
#	</filter>

	<filter **>
		@type FlowAugmentNetBlock
		    dbhost "#{ENV['POSTGRES_HOST']}"
			dbname "#{ENV['POSTGRES_DB']}"
			dbpass "#{ENV['POSTGRES_PASSWORD']}"
			dbuser "#{ENV['POSTGRES_USER']}"
#			dbuser 
	</filter>


	<filter **>
		@type FlowAugmentHost
		    dbhost "#{ENV['POSTGRES_HOST']}"
			dbname "#{ENV['POSTGRES_DB']}"
			dbpass "#{ENV['POSTGRES_PASSWORD']}"
			dbuser "#{ENV['POSTGRES_USER']}"
#			dbuser 
	</filter>

	<filter **>
		@type FlowAugmentHostExtra
		    dbhost "#{ENV['POSTGRES_HOST']}"
			dbname "#{ENV['POSTGRES_DB']}"
			dbpass "#{ENV['POSTGRES_PASSWORD']}"
			dbuser "#{ENV['POSTGRES_USER']}"
#			dbuser 
	</filter>

	<filter **>
		@type FlowAugmentDNS
		    dbhost "#{ENV['POSTGRES_HOST']}"
			dbname "#{ENV['POSTGRES_DB']}"
			dbpass "#{ENV['POSTGRES_PASSWORD']}"
			dbuser "#{ENV['POSTGRES_USER']}"
#			dbuser 
	</filter>



#	<filter **>
#		@type FlowMatchACL
#		aclFile "/opt/netbehave/acl.csv"
#
#		@type FlowMatchACLPg
#			dbhost "#{ENV['POSTGRES_HOST']}"
#			dbname "#{ENV['POSTGRES_DB']}"
#			dbpass "#{ENV['POSTGRES_PASSWORD']}"
#			dbuser 
#
#		aclField "match"
#	</filter>


	
    <match **>
    @type copy
    
    	# Output to ipam (IPAM) pg v2
    	<store> 
    		@type FlowIPAM
			local_network_name	home
			outlabel @assets
			dbhost "#{ENV['POSTGRES_HOST']}"
			dbname "#{ENV['POSTGRES_DB']}"
			dbpass "#{ENV['POSTGRES_PASSWORD']}"
			dbuser "#{ENV['POSTGRES_USER']}"
#			dbuser 
			newIPfile /opt/netbehave/ipam/ipam.new
#			newIPfile /opt/netbehave/core/ipam.new
    	</store>
    	
    	# Output to  condensed traffic to Daily (YYYY-MM-DD) sqlite file
#    	<store>
#			@type FlowDailyPG
#			dbhost "#{ENV['POSTGRES_HOST']}"
#			dbname "#{ENV['POSTGRES_DB']}"
#			dbpass "#{ENV['POSTGRES_PASSWORD']}"
#			dbuser "#{ENV['POSTGRES_USER']}"
#   	</store>

    	<store>
			@type FlowPass1
			dbhost "#{ENV['POSTGRES_HOST']}"
			dbname "#{ENV['POSTGRES_DB']}"
			dbpass "#{ENV['POSTGRES_PASSWORD']}"
			dbuser "#{ENV['POSTGRES_USER']}"
     	</store>



#    	<store>
#			@type FlowSearch
#			instructionFile	/opt/netbehave/core/search
#   	</store>
    	
    	# uncomment to debug to temporary file if needed
        <store>
            @type file
            path /opt/netbehave/core/step7
            append true
#            compress gzip
        </store>

		<store>
		@type flowcounter
		@label @counts
#    count_keys message
# unit can be seconds, minute, hour, day
		unit       minute # hour
		aggregate  all
		tag        fluentd.netflow
		</store>
  
	</match>



</label> # @nfcore


<label @counts>
  <match fluentd.netflow>
    # output configurations where to send count results
    @type copy
    
    	<store>
		    @type stdout
#			label	@nfAnalysis
    	</store>

    	<store>
		    @type file
            path /opt/netbehave/core/flowcounter
            append true
    	</store>

  </match>
</label>



<label @assets>
    <match **>
    @type copy

    	<store>
            @type file
            path /opt/netbehave/core/assets/
            append true
            compress gzip
		</store>

    </match>
</label>

<label @fwdBandwidth>
    <match **>
    @type copy

	   	<store>
		@type stdout
   		</store>
    </match>

</label>

